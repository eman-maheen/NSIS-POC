name: Windows Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    shell: cmd

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   6.8.1
  BUILD_TYPE:   Release

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version:      ${{ env.QT_VERSION }}
          host:         windows
          target:       desktop
          arch:         win64_msvc2022_64
          dir:          ${{ runner.temp }}
          setup-python: false

      - name: Setup Visual Studio Environment
        uses: microsoft/setup-msbuild@v1.1
        with:
          vs-version: '17.0'

      - name: Configure CMake
        run: |
          mkdir -p ${{ runner.temp }}\build
          cd ${{ runner.temp }}\build
          cmake ${{ env.SOURCE_DIR }} -G "Visual Studio 17 2022" -A x64 ^
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} ^
          -DCMAKE_PREFIX_PATH=${{ env.Qt6_DIR }}

      - name: Build
        working-directory: ${{ runner.temp }}\build
        run: cmake --build . --config ${{ env.BUILD_TYPE }}

      - name: Deploy Qt Dependencies
        working-directory: ${{ runner.temp }}\build\${{ env.BUILD_TYPE }}
        run: |
          mkdir ${{ env.SOURCE_DIR }}\deploy\bin
          copy test-project.exe ${{ env.SOURCE_DIR }}\deploy\bin\
          windeployqt ${{ env.SOURCE_DIR }}\deploy\bin\test-project.exe --release --compiler-runtime
          
          # Copy MSVC Runtime DLLs directly from Windows System32
          copy "C:\Windows\System32\msvcp140.dll" ${{ env.SOURCE_DIR }}\deploy\bin\
          copy "C:\Windows\System32\msvcp140_1.dll" ${{ env.SOURCE_DIR }}\deploy\bin\
          copy "C:\Windows\System32\msvcp140_2.dll" ${{ env.SOURCE_DIR }}\deploy\bin\
          copy "C:\Windows\System32\vcruntime140.dll" ${{ env.SOURCE_DIR }}\deploy\bin\
          copy "C:\Windows\System32\vcruntime140_1.dll" ${{ env.SOURCE_DIR }}\deploy\bin\

      - name: Install NSIS
        run: choco install nsis -y

      - name: Create Installer
        run: |
          makensis.exe ${{ env.SOURCE_DIR }}\deploy\nsis\installer.nsi


      - name: Upload Installer
        uses: actions/upload-artifact@v4
        with:
          name: TestProgram-Setup
          path: ${{ env.SOURCE_DIR }}\deploy\TestProgram-Setup.exe